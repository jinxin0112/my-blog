(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{517:function(t,e,r){"use strict";r.r(e);var o=r(2),l=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("难得最近比较闲，登了下 github 发现自己以前 fork 的仓库别人都已经更新了十万八千里的个版本了。问题来了，如何将我 fork 的仓库更新同步到源库呢")]),t._v(" "),r("p",[t._v("google 了下，基本上的解决方法都是提一个 源库 => fork 库的 pull request，本来打算就办了，发现这个方法有两个弊端：")]),t._v(" "),r("ul",[r("li",[t._v("fork 库会多出一个 merge commit，历史不干净，如果这个时候再从 fork 库提 pull request 回源库的话，这个 commit 也会带回去")]),t._v(" "),r("li",[t._v("需要在网页上去点点点，麻烦")])]),t._v(" "),r("p",[t._v("继续 google ...... 发现了一个更好的方案")]),t._v(" "),r("p",[t._v("直接上 git 命令：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("\n# 首先克隆我们的 github 项目到本地\ngit clone git@github.com:我们的github名/developer-note.git\n\n# 关联开源项目，注意这个`upstream`就代表关联上一级仓库，而`origin`表示我们自己的远程库\ngit remote add upstream git@github.com:BrucePhoebus/developer-note.git\n\n# 先拉取最新源项目更新，此时我们在本地 master 分支\ngit pull upstream master\n\n")])])]),r("p",[t._v("值得一提的是，使用这种方法更新 fork库的话，再往源库提 pull request 需要新切分支，避免后续在 master pull 的时候产生冲突，从而产生不应有的 conflict merge commit")])])}),[],!1,null,null,null);e.default=l.exports}}]);